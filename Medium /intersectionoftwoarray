class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        # break down the problem: return the intersection of two arrays. But one thing to consider and pay attention to is we have to return as many time it appears. 
        # if we use hashset, so it will be eliminate the duplicate element, so I think it maybe not an optimal solution.
        # how about we using hashset, then we count element in te first array. Then we run for loop in second array and then we check if it in hashmap, if yes decrease the count by 1. append then decrease

        count = defaultdict() 
        res = []

        for num in nums1:
            if num in count: 
                count[num] += 1
            else:
                count[num] = 1
        for num in nums2:
            if num in count:
                if count[num] > 0:
                    count[num] -= 1
                    res.append(num) 
        return res

    # Time complexity: O(N) because we traverse through nums1 once to count it occurences
    # Space complexity: O(N) because we create the hashmap to store the the number with its occurences
            
        


       